########################################################
Git 

*워터 풀 개발 프로세스 
개발을 복수의 공정으로 나누어 각 공정의 종료 시에 성과물을 작성함으로써 각 공정에서의 품질
확보를 도모하는 개발 방법입니다.
'물이 흘러내린다'는 식으로 공정이 진행되어 이름이 지어졌으며, 상류공정에서 하류공정까지 흐르며
가능하도록 개발이 이루어집니다.

요건정의 
외부설계 
내부설계 
코딩 
단체 테스트
결합 테스트 
릴리즈 / 운용 

워터풀 개발 프로세스의 메리트 
1. 계획 수립의 간단함
2. 진척 관리의 용이함 
3. 성과물 베이스의 개발 


워터풀 개발 프로세스의 디메리트 
1. 상류공정에서 밖에 요건 정의가 안됨
2. 사양 변경 시의 영향 
3. 성과물 관리의 가동부하 


#########################################################################################

*agile 개발 프로세스
애자일(agile)은 일본어로 번역하면 '기민한, 준민한'이라는 뜻으로, 이름처럼 기민하다
대응을 가능하게 하는 개발 방법입니다.
개발 중에 사양 변경이 발생할 경우, 변경 내용을 전 시스템에 반영시켜야 하는데, 
아자일 개발 프로세스에서는 아래의특징을통해 개발중인 사양변경에도 유연하게대응할수 있습니다.

*agile Scrum
Agile(애자일)의 대표 관리 Practice인 Scrum(스크럼)은 특정 개발 언어나 방법론에 의존적이지 않으며,
제품 개발 뿐만 아니라 일반적인 프로젝트 관리에도 사용 가능한 프로세스 프레임워크입니다.
Scrum은 작은 주기(Sprint)로 개발 및 검토를 하며 효율적인 협업 방법을 제공합니다.

애자일 방법론 중의 하나로 프로젝트 관리를 위한 상호 점진적 개발 방법론
매일 정해진 시간, 정해진 장소에서 단기간에 개발하는 개발팀을 위한 프로젝트 관리 중심의 방법론
소프트웨어 유지보수팀이나 일반적인 프로젝트 관리에서도 적용 가능
추정 및 조정 기반의 경험적 관리 기법

스크럼의 5가지 가치
확약 : 약속을 확실히 실현한다.
전념 : 확약을 위해 실현에 전념한다.
정직 : 모든 사실을 숨기지 않는다.
존중 : 다른 사람에게 경의를 표한다.
용기 : 옳은 일을 할 수 있도록 갈등과 도전을 극복한다.

#########################################################################################
*XP 익스트림 프로그래밍
정의 : XP(eXtreme Programming)은 수시로 발생하는 고객의 요구 사항에 유연하게 대응하기 위해 
      고객의 참여와 개발 과정의 반복을 극대화하여 개발 생산성을 향상하는 방법을 일컫습니다. 

1. xp는 짧고 반복적인 개발 주기 , 단순한 설계 고객의 적극적인 참여를 통해 
   소프트웨어를 빠르게 개발하는 것을 목적으로 합니다. 
2. 릴리즈의 기간을 짧게 반복하면서 고객의 요구사항 반영에 대한 가시성을 높입니다. 
3. 릴리즈 테스트마다 고객을 직접 참여시킴으로써 요구한 기능이 제대로 구현되는지 
   고객이 직접 확인할 수 있습니다. 
4. 비교적 소규모 인원의 개발 프로젝트에 효과적입니다. 

*XP개발 프로세스 

사용자 스토리 : 고객의 요구사항을 간단한 시나리오로 표현한 것
릴리즈 계획 수립(Release Plannig):몇 개의 스토리가 적용되어 부분적으로 기능이 완료된 제품을 제공하는 것을 릴리즈라고 합니다. 
스파이크 : 요구사항의 신뢰성을 높이고 기술 문제에 대한 위험을 감소시키기 위해 별도로 만드는 간단한 프로그램
이터레이션 : 하나의 릴리즈를 더 세분화 한 단위를 일컫는다. 
승인 검사 : 하나의 이터레이션 안에서 계획된 릴리즈 단위의 부분 완료된 제품이 구현되면 수행하는 테스트를 말한다. 
소규모 릴리즈 : 릴리즈를 소규모로 하게 되면, 고객의 반응을 기능별로 확인할 수 있어, 고객의 요구사항에 좀 더 유연하게 대응할 수 있다. 

*XP의 주요 실천 방법(Practice)

실천방법 	내용
Pair Programming(짝 프로그래밍)	다른 사람과 함께 프로그래밍을 수행함으로써 개발에 대한 책임을 공동으로 나눠 갖는 환경을 조성
Test-Driven Development(테스트 주도 개발) 	개발자가 실제 코드를 작성하기 전에 테스트 케이스를 먼저 작성하므로 자신이 무엇을 해야할지를 정확히 파악할 수 있다. 
Whole Team(전체 팀)	개발에 참여하는 모든 구성원(고객을 포함)들은 각자 자신의 역할이 있고 그 역할에 대한 책임을 가져야 한다. 
Continuos Integration(계속적인 통합)	모듈 단위로 나눠서 개발된 코드들은 하나의 작업이 마무리될 때마다 지속적으로 통합됩니다. 
Design Improvement(디자인 개선)	
프로그램 기능의 변경 없이, 단순화, 유연성 강화 등을 통해 시스템을 재구성합니다. 

Small Release(소규모 릴리즈)	릴리즈 기간을 짧게 반복함으로써 고객의 요구 변화에 신속히 대응 가능


#########################################################################################

* FDD(Feature Driven Development, 기능 중심 개발) ユーザー機能駆動開発 방법
- 사용자가 원하는 기능의 시나리오에 필요한 만큼만 개발하는 방법

- 모듈이나 서비스 단위로 개발하는 것이 아니라 기능 중심 단위로 개발하는 방법

- 설계와 구축 기능을 중점으로 개발

- 모듈화와 구조화의 원칙을 지키면서 한 모듈이 개발되기 전에 테스트할 수 있을 정도로만 개발하는 방법

- 개발 초기부터 기능을 테스트할 수 있기 때문에 모듈 중심 개발보다 테스트가 빠름

- 기능 중심 개발을 깊이 우선 통합, 모듈 중심 개발은 넓이 우선 통합

- 기능을 매우 구체적이고 짧은 작업으로 분할

- 작업을 시작하여 2주의 반복 주기로 기능을 개발

- 스크럼 방법은 소프트웨어 개발보다는 프로젝트 관리를 위한 개발팀을 운영하는 효율적인 운영 방침

- 스크럼은 상품이나 서비스 단위로 개발되지만 FDD 방법은 기능 단위로 개발

FDD 방법은 5가지 기본 활동으로 구성된 단기 반복 프로세스
FDD 방법의 5가지 기본 활동
1. 전체 설계 작성
2. 기능 목록 작성
3. 기능에 의한 계획
4. 기능에 의한 설계
5. 기능에 의한 구현
6. 기능에 의한 설계와 구현에 많은 시간(전체의 75% 이상)을 할당

###################################################################################
*중요(트러블 발생의 주요 원인)
-> 상대에게 기능 개발을 어느 부분까지 할 수 있는지 확실하게 의사표현을 하는 것이 좋음
-> 이건 개발을 진행함에 있어 어중간하게 대답을 했을 시 상대방이 오해를 함으로 구현 가능 기능인지, 불가능인지 
-> 어느 문제점이 있는데 확실하게 의사표현을 함으로 기능 구현 프로세스를 정할 수 있음

非機能要件
主目的(機能要件)以外の要件は非機能要件と言います。
「応答の速度は」「セキュリティの対応程度は」「拡張性は」などが非機能要件と言えます。
この非機能要件については、発注者自身も意識していない場合や、暗黙の了解事項として期待
している場合があります。そのため、トラブルが起こりやすい部分でもあります。開発者と発
注者間で入念な話し合いをして、顧客がそのシステムに期待している、求めている品質を明ら
かにし、満たす必要があります。
下記のような項目を確認することが大切です。

• 可用性: いつでも使えるか、どれだけ安定感があるか
• 性能/拡張性: どれだけ快適に使えるか、利用者が増えても大丈夫か
• 運用/保守性: アフターサービスはきっちりとされているか
• 移行性: サーバーの引っ越しや、他サービスへの乗り換えは簡単にできるのか
• セキュリティ: ウイルス対策など、セキュリティ対策がしっかりされているか
• システム環境/エコロジー: そのモノを設置する環境は適切か?、環境保護に役立っ
ているか

システム開発概論

下記に IPA が発行している非機能要求グレードのチェックシートです。開発演習では時間の問
題もあり、すべてを確認する必要はありませんが、参考のため一度ダウンロードして確認して
ください。
http://s.reskill.jp/non-functional


*그룹 디스커션 오후
주제 : 팀 개발을 진행함에 있어 중요한 것은 무엇인가? 
사랑..? 
협조성
역할 설정 
신뢰관계
곤란한게 있으면 서로 의견 공유하며 해결책 제시


